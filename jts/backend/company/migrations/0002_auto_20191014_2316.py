# Generated by Django 2.2 on 2019-10-15 06:16

from django.db import migrations, models
import requests, json
import os


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0001_initial'),
    ]

    def fetch_locations(apps, schema_editor):
        Company = apps.get_model('company', 'Company')
        companies = Company.objects.all()
        url = "https://maps.googleapis.com/maps/api/place/textsearch/json?"
        api_key = os.environ.get('JOBHAX_BACKEND_MAPS_API_KEY', '')
        if api_key is not '':
            for company in companies:
                query = company.company
                if query is None:
                    query = company.cb_name
                if query is not None:
                    r = requests.get(url + 'query=' + query +
                                     '&key=' + api_key)
                    x = r.json()
                    y = x['results']
                    for i in range(len(y)):
                        place = y[i]
                        if 'establishment' in place['types']:
                            lat = place['geometry']['location']['lat']
                            lng = place['geometry']['location']['lng']
                            formatted_address = place['formatted_address']
                            company.location_lat = lat
                            company.location_lon = lng
                            company.location_address = formatted_address
                            company.save()
                            break


    operations = [
        migrations.AddField(
            model_name='company',
            name='location_address',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='company',
            name='location_lat',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='company',
            name='location_lon',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.RunPython(fetch_locations, reverse_code=migrations.RunPython.noop),
    ]
